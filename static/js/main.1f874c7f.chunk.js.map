{"version":3,"sources":["components/conditionals/conditionals.js","hooks/index.js","components/form/form.js","components/my-jobs/myJobs.js","components/dashboard/dashboard.js","components/footer/footer.js","components/modal/modal.js","components/job-list/job-item.js","components/job-list/job-list.js","components/nav/nav.js","lib/api.js","store/action.js","components/signIn/signIn.js","components/signUp/signUp.js","components/login/login.js","components/splash/splash.js","App.js","store/job-reducer.js","store/login-reducer.js","store/index.js","serviceWorker.js","index.js"],"names":["render","condition","children","If","props","React","Children","map","child","cloneElement","Then","Else","When","useForm","callback","useState","values","setValues","handleChange","event","persist","target","name","value","handleSubmit","preventDefault","reduxForm","form","onChange","onSubmit","Field","component","placeholder","type","connect","state","user","login","dispatch","getState","jobs","filter","job","postedBy","console","log","listJobs","key","_id","price","description","onClick","handleDelete","handleDetails","className","DashBoard","addJob","Footer","Component","Modal","title","close","JobItem","item","postedUser","jobList","Nav","setScreen","callAPI","url","method","body","token","handler","errorHandler","fetch","mode","cache","headers","JSON","stringify","undefined","then","response","json","data","catch","e","error","todoAPI","get","payload","post","destroy","signInFetch","auth","text","loggedIn","cookie","save","results","signIn","signUpFetch","status","result","signUpFail","signUpSuccess","handleSignIn","actions","username","setUsername","password","setPassword","handleInputChange","encodedStr","btoa","switchLogin","style","cursor","handleSignUp","email","setEmail","signupStatus","Login","loginType","setLoginType","Splash","handleGetJobs","items","id","handlePost","handleToggle","err","handlePlaceBid","record","handleGetUsers","handleCloseJob","screen","_deleteItem","authCookie","load","_toggleDetails","useEffect","complete","showDetails","details","initialState","reducers","combineReducers","action","todoList","formReducer","jwt","verify","store","createStore","composeWithDevTools","applyMiddleware","thunk","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.1f874c7f.chunk.js","sourcesContent":["import React from 'react';\n\nconst render = (condition = false, children = null) => {\n  return !!condition ? children : null;\n};\n\n/**\n * Component to render components with if condition\n * @param {*} props \n */\nexport const If = props =>\n  React.Children.map(props.children, child =>\n    React.cloneElement(child, { condition: props.condition }),\n  );\n\n  /**\n * Component to render components, used with If component\n * @param {*} props \n */\nexport const Then = props => render(props.condition, props.children);\n\n/**\n * Component to render components, used with If component\n * @param {*} props \n */\nexport const Else = props => render(!props.condition, props.children);\n\n/*\n<When condition={true}>\n  <h2>When Works</h2>\n</When>\n*/\n\n/**\n * Component to render components when a condition is true\n * @param {*} props \n */\nexport const When = props => render(props.condition, props.children);\n\n/*\n<Unless condition={administrator}>\n  Pay more $$ and we will make you an admin\n</Unless>\n*/\n\n/**\n * Component to render components unless a condition is met\n * @param {*} props \n */\nexport const Unless = props => render(!props.condition, props.children);","import { useState } from \"react\";\n\n/**\n * Use form hook\n * @param {*} callback \n */\nconst useForm = callback => {\n  const [values, setValues] = useState({});\n\n  const handleSubmit = event => {\n    if (event) event.preventDefault();\n    callback(values);\n  };\n\n  const handleChange = event => {\n    event.persist();\n    setValues(values => ({\n      ...values,\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  return {\n    handleChange,\n    handleSubmit,\n    values\n  };\n};\n\nexport default useForm;\n","import React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport useForm from '../../hooks/';\n\n/**\n * Component to render form to add a new job\n * @param {*} props \n */\nconst TodoForm = props => {\n  const { handleChange, handleSubmit } = useForm(props.handleSubmit);\n  return (\n    <>\n      <h3>Add Job</h3>\n      <form onChange={handleChange} onSubmit={handleSubmit}>\n        <label>\n          <span>Job</span>\n          <Field\n            name=\"name\"\n            component=\"input\"\n            placeholder=\"Add Job\"\n          />\n        </label>\n        <label>\n          <span>Price</span>\n          <Field\n            name=\"price\"\n            type=\"number\"\n            component=\"input\"\n            placeholder=\"Price\"\n          />\n        </label>\n        <label>\n          <span>Description</span>\n          <Field \n          name='description'\n          type='textarea'\n          component='input'\n          />\n        </label>\n        <button>Add Job</button>\n      </form>\n    </>\n  );\n};\n\nexport default reduxForm({\n  form: \"jobs\"\n})(TodoForm);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\n\n/**\n * Component that renders a list of all of a users jobs\n * @param {*} props \n */\nconst MyJobs = props => {\n  const jobs = props.jobs.filter(job => job.postedBy === props.user);\n\n  console.log([props.user])\n  const listJobs = jobs.map(job => (\n    <tr key={job._id}>\n      <td>{job.name}</td>\n      <td>{job.price}</td>\n      <td>{job.description}</td>\n      <td><button onClick={() => props.handleDelete(job)}>Delete</button></td>\n      <td>\n        <button onClick={() => props.handleDetails(job._id)}>Details</button>\n      </td>\n    </tr>\n  ));\n  return (\n    <div className=\"myjob-table\">\n      <table>\n        <tbody>\n          <tr key=\"headings\">\n            <td>Name</td>\n            <td>Bid</td>\n            <td>Description</td>\n          </tr>\n          {listJobs}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.login.user,\n});\n\nconst mapDispatchToProps = (dispatch, getState) => ({});\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyJobs);","import React from 'react';\nimport Form from '../form/form';\nimport MyJobs from '../my-jobs/myJobs';\n\n/**\n * Component to render user dashboard\n * @param {*} props \n */\nconst DashBoard = props => {\n  return (\n    <>\n      <Form handleSubmit={props.addJob}/>\n      <MyJobs jobs={props.jobs} handleDetails={props.handleDetails} handleDelete={props.handleDelete}/>\n    </>\n  )\n}\n\nexport default DashBoard;","import React from \"react\";\nimport \"./footer.scss\";\n\n/**\n * footer component\n */\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer>\n        <section>\n          <p>&copy; Can-U 2020</p>\n        </section>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;","import React from \"react\";\nimport \"./modal.scss\";\n\n/**\n * Component that renders a modal to show job details\n * @param {*} props \n */\nconst Modal = props => {\n  return (\n    <div className=\"modal\">\n      <div>\n        <header>\n          <span className=\"title\">{props.title}</span>\n          <button onClick={props.close}>X</button>\n        </header>\n        <div>{props.children}</div>\n      </div>\n    </div>\n  );\n};\nexport default Modal;\n","import React from 'react';\nimport Modal from '../modal/modal';\n\n/**\n * Component to render one job item is a list\n * @param {*} props \n */\nconst JobItem = props => {\n  const job = props.item || {};\n\n  return (\n    <Modal title=\"Job\" close={props.handleDetails}>\n      <div>\n        \n          <span>Name: {job.name}</span>\n          <span>Description: {job.description}</span>\n          <span>Price: {job.price}</span>\n          <span>Posted by: {job.postedUser}</span>\n        \n      </div>\n    </Modal>\n  )\n}\n\nexport default JobItem;","import React from 'react';\nimport {connect} from 'react-redux';\n\nfunction jobList(props){\n  \n  const jobs = props.jobs;\n  \n  const listJobs = jobs.map(job => \n    <tr key={job._id}>\n      <td>{job.name}</td>\n      <td>{job.price}</td>\n      <td>{job.postedUser}</td>      \n      <td><button onClick={() => props.handleDetails(job._id)}>Details</button></td>\n      <td><button onClick={() => props.handleDelete(job._id)}>DELETE</button></td>\n    </tr>\n  );\n  return (\n    <table>\n      <tbody>\n        <tr key=\"headings\">\n          <td>Name</td>\n          <td>Bid</td>\n          <td>Owner</td>\n        </tr>\n        {listJobs}\n      </tbody>\n    </table>\n  );\n}\n\n\n\nexport default jobList;","import React from 'react';\n\n/**\n * Component that renders a navigation bar\n * @param {*} props \n */\nconst Nav = props => {\n  return(\n    <div>\n      <ul>\n        <li>\n          <span onClick={() => props.setScreen('dashboard')}>Dashboard</span>\n        </li>\n        <li>\n          <span onClick={() => props.setScreen('main')}>Main</span>\n        </li>\n      </ul>\n    </div>\n  )\n};\n\nexport default Nav;","import cookie from 'react-cookies';\n\n/**\n * general function for API calls\n * @param {string} url \n * @param {string} method \n * @param {object} body \n * @param {string} token \n * @param {function} handler \n * @param {function} errorHandler \n */\nconst callAPI = (url, method = \"get\", body, token, handler, errorHandler) => {\n  return fetch(url, {\n    method: method,\n    mode: \"cors\",\n    cache: \"no-cache\",\n    headers: { \n      \"Content-Type\": \"application/json\",\n      \"Authorization\": \"Bearer \" + token},\n    body: body ? JSON.stringify(body) : undefined\n  })\n    .then(response => response.json())\n    .then(data => (typeof handler === \"function\" ? handler(data) : data))\n    .catch(e =>\n      typeof errorHandler === \"function\" ? errorHandler(e) : console.error(e)\n    );\n};\n\n/**\n * function to hit API on signin\n * @param {string} url \n * @param {string} auth \n * @param {function} handler \n * @param {function} errorHandler \n */\nconst callAPIBasic = (url, auth, handler, errorHandler) => {\n\n  return fetch(url, {\n    method: \"POST\",\n    mode: \"cors\",\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      \"Authorization\": `Basic ${auth}`,\n    },\n    body: undefined,\n  })\n  .then(response => response.text())\n  .then(data => {\n    if(data === '{\"error\":\"Invalid User ID/Password\"}'){\n      return {loggedIn: false, data: null};\n    } \n    else {\n      console.log('signin data', data);\n      cookie.save('auth', data);\n      return {loggedIn: true, data: data};\n    }\n  })\n    .catch(e =>\n      typeof errorHandler === \"function\" ? errorHandler(e) : console.error(e)\n    );\n};\n\n/**\n * function to hit API for signup\n * @param {string} url \n * @param {object} body \n * @param {function} errorHandler \n */\nconst callAPISignUp = (url, body, errorHandler) => {\n  return fetch(url, {\n    method: 'POST',\n    mode: \"cors\",\n    cache: \"no-cache\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: body ? JSON.stringify(body) : undefined\n  })\n    .then(response => {\n      if(response.status === 500){\n        return 'username taken';\n      }else {\n        let token = response.text();\n        cookie.save('auth', token);\n        return token;\n      }\n    })\n    .catch(e =>\n      typeof errorHandler === \"function\" ? errorHandler(e) : console.error(e)\n    );\n};\n\nexport { callAPI, callAPIBasic, callAPISignUp };\n\n","import { callAPI, callAPIBasic, callAPISignUp } from \"../lib/api\";\n\nlet todoAPI = \"https://dry-shore-68165.herokuapp.com\";\n\n/**\n * action to place bid\n * @param {*} payload \n */\nexport const placeBid = payload => dispatch => {\n  return callAPI(`${todoAPI}/jobs/bid/${payload.id}`, \"PUT\", payload.body, payload.token)\n    .then(record => console.log(record));\n}\n\n/**\n * action to close job\n * @param {*} payload \n */\nexport const closeJobs = payload => dispatch => {\n  return callAPI(`${todoAPI}/jobs/close/${payload.id}`, \"PUT\", payload.token)\n    .then(record => console.log(record));\n}\n\n/**\n * action to get all jobs\n * @param {*} payload \n */\nexport const _getJobs = () => dispatch => {\n  return callAPI(`${todoAPI}/jobs`, \"GET\")\n    .then(items => dispatch(get(items.results)))\n    .catch(console.error);\n};\n\n/**\n * action to get all users\n * @param {*} payload \n */\nexport const _getUsers = payload => dispatch => {\n  return callAPI(`${todoAPI}/users`, \"GET\", '', payload.token)\n    .then(items => console.log(items))\n}\n\n/**\n * action to get\n * @param {*} payload \n */\nexport const get = payload => {\n  return {\n    type: \"GET\",\n    payload: payload\n  };\n};\n\n/**\n * action to toggle job\n * @param {*} payload \n */\nexport const toggle = payload => {\n  return {\n    type: \"TOGGLE\",\n    payload: payload\n  };\n};\n\n/**\n * action to get job details\n * @param {*} payload \n */\nexport const details = payload => {\n  return {\n    type: \"DETAILS\",\n    payload: payload\n  };\n};\n\n/**\n * action to post job\n * @param {*} payload \n */\nexport const postData = payload => dispatch => {\n  return callAPI(`${todoAPI}/jobs`, \"POST\", payload, payload.token)\n    .then(result => dispatch(post(result)))\n    .catch(console.error);\n};\n\n/**\n * action to post\n * @param {*} payload \n */\nexport const post = payload => {\n  return {\n    type: \"POST\",\n    payload: payload\n  };\n};\n\n/**\n * action to delete job\n * @param {*} payload \n */\nexport const destroyData = payload => dispatch => {\n  return callAPI(`${todoAPI}/jobs/${payload._id}`, \"DELETE\", '', payload.token)\n    .then(() => dispatch(destroy(payload.id)))\n    .catch(err => console.log(err));\n};\n\n/**\n * action to destroy\n * @param {*} payload \n */\nexport const destroy = payload => {\n  return {\n    type: \"DELETE\",\n    payload: payload\n  };\n};\n\n/**\n * action to fetch signin\n * @param {*} payload \n */\nexport const signInFetch = payload => dispatch => {\n  console.log(todoAPI);\n  return callAPIBasic(`${todoAPI}/signin`, payload)\n    .then(results => dispatch(signIn(results)));\n}\n\n/**\n * action to signin\n * @param {*} payload \n */\nexport const signIn = payload => {\n  console.log('login', payload);\n  return {\n    type: \"LOGIN\",\n    payload: payload\n  };\n};\n\n/**\n * action to fetch signup\n * @param {*} payload \n */\nexport const signUpFetch = (payload) => dispatch => {\n  return callAPISignUp(`${todoAPI}/signup`, payload).then(result => {\n    console.log('fetch result', result);\n    (result === 'username taken') ? dispatch(signUpFail(result)): dispatch(signUpSuccess(result));\n  });\n};\n\n/**\n * action for signup success\n * @param {*} payload \n */\nexport const signUpSuccess = payload => {\n  return {\n    type: \"SIGN_UP_SUCCESS\",\n    payload: payload\n  };\n};\n\n/**\n * action for signup fail\n * @param {*} payload \n */\nexport const signUpFail = payload => {\n  return {\n    type: \"SIGN_UP_FAIL\",\n    payload: payload\n  };\n};\n\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/action';\n\n/**\n * Component that renders a signin form\n * @param {*} props \n */\nconst SignIn = props => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleInputChange = (e) => {\n    switch(e.target.name){\n      case 'username':\n        setUsername(e.target.value);\n        break;\n      case 'password':\n        setPassword(e.target.value);\n        break;\n    }\n  }\n\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n    console.log('signin', username, password);\n    const encodedStr = btoa(`${username}:${password}`);\n    console.log('encoded', encodedStr);\n    props.handleSignIn(encodedStr);\n  }\n\n  const handleLoginSwitch = () => {\n    props.switchLogin('signup')\n  }\n\n  return (\n    <div>\n      <form onSubmit={handleFormSubmit}>\n        <input\n          placeholder=\"username\"\n          name=\"username\"\n          onChange={handleInputChange}\n        />\n        <input\n          placeholder=\"password\"\n          name=\"password\"\n          onChange={handleInputChange}\n        />\n        <input type=\"submit\" value=\"Log In\" />\n      </form>\n      <p onClick={handleLoginSwitch} style={{ cursor:\"pointer\" }}>Not a member?.. click to sign up</p>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n});\n\nconst mapDispatchToProps = (dispatch, getState) => ({\n  handleSignIn: data => dispatch(actions.signInFetch(data)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SignIn);","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/action';\n\n/**\n * Component that renders a sign up form\n * @param {*} props \n */\nconst SignUp = props => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [email, setEmail] = useState('');\n\n\n  const handleInputChange = (e) => {\n    switch(e.target.name){\n      case 'username':\n        setUsername(e.target.value);\n        break;\n      case 'password':\n        setPassword(e.target.value);\n        break;\n      case 'email':\n        setEmail(e.target.value);\n        break;\n    }\n  }\n\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n    console.log('signup', username, email, password);\n    const body = {\n      username: username,\n      password: password,\n      email: email,\n    }\n    props.handleSignUp(body);\n  }\n\n  const handleLoginSwitch = () => {\n    props.switchLogin('signin')\n  }\n  return (\n    <div>\n      <form onSubmit={handleFormSubmit}>\n        <label>\n          <input\n            placeholder=\"email\"\n            name=\"email\"\n            onChange={handleInputChange}\n          />\n        </label>\n        <label>\n          <input\n            placeholder=\"username\"\n            name=\"username\"\n            onChange={handleInputChange}\n          />\n        </label>\n        <label>\n          <input\n            placeholder=\"password\"\n            name=\"password\"\n            onChange={handleInputChange}\n          />\n        </label>\n        <input type=\"submit\" value=\"Sign Up\" />\n      </form>\n      <p>{props.login.signupStatus}</p>\n      <p onClick={handleLoginSwitch} style={{ cursor:\"pointer\" }}>Already a member?.. click to login</p>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  login: state.login\n});\n\nconst mapDispatchToProps = (dispatch, getState) => ({\n  handleSignUp: data => dispatch(actions.signUpFetch(data)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SignUp);\n","import React, { useState } from 'react';\nimport { Else, If, Then } from '../conditionals/conditionals';\nimport SignIn from '../signIn/signIn';\nimport SignUp from '../signUp/signUp';\n\n/**\n * Component that renders signin/ signup conditionally\n * @param {*} props \n */\nconst Login = props => {\n  const [loginType, setLoginType] = useState('signin');\n\n  const switchLogin = (type) => {\n    setLoginType(type);\n  }\n\n  return (\n    <div>\n      <If condition={loginType === 'signup'}>\n        <Then>\n          <SignUp switchLogin={switchLogin} />\n        </Then>\n        <Else>\n          <SignIn switchLogin={switchLogin} />\n        </Else>\n      </If>\n    </div>\n  )\n}\n\nexport default Login;","import React from 'react';\nimport Login from '../login/login';\n\n/**\n * Component that renders a splash page that holds a login form and is shown if a users lands on the page without being logged in\n * @param {*} props \n */\nconst Splash = props => {\n\n  return (\n    <div>\n      <h1>Welcome to Can-U</h1>\n      <p>This is some information describing our app blah blah blah blahblah blah blahblah blahblahblahblahblahblahblahblah blah</p>\n      <Login />\n    </div>\n  )\n}\n\nexport default Splash;","\nimport React, { useEffect, useState } from 'react';\nimport cookie from 'react-cookies';\nimport { connect } from \"react-redux\";\nimport './App.css';\nimport { Else, If, Then, When } from './components/conditionals/conditionals';\nimport Dashboard from './components/dashboard/dashboard';\nimport Footer from './components/footer/footer';\nimport JobItem from './components/job-list/job-item';\nimport JobList from './components/job-list/job-list';\nimport Nav from './components/nav/nav';\nimport Splash from './components/splash/splash';\nimport * as actions from './store/action';\n\n\n/**\n * Main App component\n * @param {*} props\n */\nfunction App(props) {\n\n  const [screen, setScreen] = useState('dashboard')\n\n\n  const _addJob = data => {\n    const authCookie = cookie.load('auth')\n    data.token = authCookie;\n    data.complete = false;\n    props.handlePost(data);\n  };\n\n  const _deleteItem = data => {\n    const authCookie = cookie.load('auth')\n    data.token = authCookie;\n    props.handleDelete(data);\n  };\n\n  const _toggleDetails = id => {\n    props.handleDetails(id);\n  };\n\n  const _getJobs = () => {\n    props.handleGetJobs();\n  };\n\n  const _getUsers = data => {\n    const authCookie = cookie.load('auth')\n    data.token = authCookie;\n    props.handleGetUsers(data);\n  }\n\n  const placeBid = () => {\n    console.log(props.jobs.jobList[0]._id)\n    const authCookie = cookie.load('auth');\n    let id = props.jobs.jobList[0]._id;\n    let body = {price: 10};\n    props.handlePlaceBid({id: id, body: body, token: authCookie})\n  }\n\n  const closeJob = () => {\n    const authCookie = cookie.load('auth');\n    let id = props.jobs.jobList[0]._id;\n    props.handleCloseJob({id: id, token: authCookie})\n  }\n\n  \n\n  useEffect(()=> {\n    _getJobs();    \n  })\n\n  return (\n    <>\n      <div className=\"App\">\n        <If condition={!props.login.loggedIn}>\n          <Then>\n            <Splash />\n          </Then>\n          <Else>\n            <Nav setScreen={setScreen} />\n            <button onClick={_getUsers}>GET USERS TEST</button>\n            <button onClick={placeBid}>PLACE BID TEST</button>\n            <button onClick={closeJob}>CLOSE JOB TEST</button>\n            \n            <When condition={screen === 'main'}>\n              <JobList\n                jobs={props.jobs.jobList}\n                handleDetails={_toggleDetails}\n                handleDelete={_deleteItem}\n              />\n            </When>\n            <When condition={screen === 'dashboard'}>\n              \n                <Dashboard\n                  addJob={_addJob}\n                  jobs={props.jobs.jobList}\n                  handleDetails={_toggleDetails}\n                  handleDelete={_deleteItem}\n                />\n            </When>\n            <When condition={props.jobs.showDetails}>\n              <JobItem handleDetails={_toggleDetails} item={props.jobs.details} />\n            </When>\n            <Footer />\n          </Else>\n        </If>\n      </div>\n    </>\n  );\n}\n\nconst mapStateToProps = state => ({\n  jobs: state.jobs,\n  login: state.login\n});\n\nconst mapDispatchToProps = (dispatch, getState) => ({\n  handleGetJobs: () => dispatch(actions._getJobs()),\n  handleDetails: id => dispatch(actions.details(id)),\n  handlePost: data => dispatch(actions.postData(data)),\n  handleToggle: id => dispatch(actions.toggle(id)),\n  handleDelete: data => dispatch(actions.destroyData(data)),\n  handlePlaceBid: data => dispatch(actions.placeBid(data)),\n  handleGetUsers: data => dispatch(actions._getUsers(data)),\n  handleCloseJob: () => dispatch(actions.closeJobs())\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","const initialState = {\n  jobList: [{}],\n  showDetails: null,\n  details: {}\n};\n\n/**\n * Reducer for jobs state\n * @param {object} state\n * @param {object} action\n */\nexport default (state = initialState, action) => {\n  let { type, payload } = action;\n\n  switch (type) {\n    case \"DETAILS\":\n      let item = state.jobList.filter(item => item._id === payload)[0] || {};\n      return { ...state, showDetails: !state.showDetails, details: item };\n\n    case \"GET\":\n      return { ...state, jobList: payload };\n\n    case \"POST\":\n      return { ...state, jobList: [...state.jobList, payload] };\n\n    case \"TOGGLE\":\n      return {\n        ...state,\n        jobList: state.todoList.map(item =>\n          item._id === payload ? { ...item, complete: !item.complete } : item\n        )\n      };\n    case \"DELETE\":\n      return {\n        ...state,\n        jobList: state.jobList.filter(item => item._id !== payload)\n      };\n    default:\n      return state;\n  }\n};\n","import jwt from 'jsonwebtoken';\nimport cookie from \"react-cookies\";\n\nconst cookieToken = cookie.load(\"auth\");\nconst token = cookieToken || null;\n\n\nconst initialState = {\n  token: token,\n  loggedIn: !!token,\n  signupStatus: null,\n\n  user: '',\n\n};\n\n/**\n * Reducer for login state\n * @param {object} state\n * @param {object} action\n */\nexport default (state = initialState, action) => {\n  let { type, payload } = action;\n  switch (type) {\n    case \"LOGIN\":\n      console.log('reducer payload', payload);\n\n      return {\n        token: payload.data,\n        loggedIn: payload.loggedIn,\n        user: jwt.verify(payload.data, `sauce`)\n      }\n    case \"SIGN_UP_SUCCESS\":\n      return {\n        token: payload,\n        loggedIn: true,\n        user: jwt.verify(payload, `sauce`)\n\n      }\n      case \"SIGN_UP_FAIL\":\n        return {\n          signupStatus: payload,\n        }\n    default:\n      return state;\n  }\n};\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { reducer as formReducer } from \"redux-form\";\nimport thunk from \"redux-thunk\";\nimport jobsReducer from \"./job-reducer\";\nimport loginReducer from './login-reducer';\n\nlet reducers = combineReducers({\n  jobs: jobsReducer,\n  form: formReducer,\n  login: loginReducer\n});\n\n/**\n * function to create redux store\n */\nconst store = () =>\n  createStore(reducers, composeWithDevTools(applyMiddleware(thunk)));\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport createStore from './store'\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore();\n\nReactDOM.render(\n<Provider store={store}>\n<App />\n</Provider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}