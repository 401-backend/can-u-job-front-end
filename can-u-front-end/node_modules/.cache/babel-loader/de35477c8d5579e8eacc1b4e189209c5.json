{"ast":null,"code":"var _jsxFileName = \"/Users/nataliealway/devstation/401-backend/can-u-job-front-end/can-u-front-end/src/components/job-list/job-item.js\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport Modal from '../modal/modal';\nimport './job-item.scss';\n/**\n * Component to render one job item is a list\n * @param {*} props \n */\n\nconst JobItem = props => {\n  const job = props.item || {};\n  const [bid, setBid] = useState(0);\n  const [winningBid, setWinningBid] = useState();\n  const [currentBidder, setCurrentBidder] = useState(job.currentBidder);\n  /**\n   * @function Add Bid\n   */\n\n  const addBid = () => {\n    bid <= 0 ? alert('Bid must be greater than $0') : props.placeBid(job._id, bid);\n    bid >= job.price && bid > 0 ? alert(`Must bid less than current price of ${job.price}`) : props.placeBid(job._id, bid);\n\n    if (bid < job.price && bid > 0) {\n      setWinningBid('You are now the leading bidder!');\n      setCurrentBidder(props.login.user.username);\n    }\n  };\n\n  return React.createElement(Modal, {\n    title: \"Job\",\n    close: props.handleDetails,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"modal-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"description-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"description-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Name: \", job.name), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Description: \", job.description), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Posted by: \", job.postedUser)), React.createElement(\"div\", {\n    id: \"description-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Current Bid: $\", job.price), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Current Bidder: \", currentBidder))), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Bid Amount: $\"), React.createElement(\"input\", {\n    id: \"bid\",\n    onChange: e => setBid(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    id: \"modal-button\",\n    onClick: () => {\n      addBid();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Place Bid\")), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, winningBid)));\n};\n\nconst mapStateToProps = state => ({\n  login: state.login\n});\n\nexport default connect(mapStateToProps)(JobItem);","map":{"version":3,"sources":["/Users/nataliealway/devstation/401-backend/can-u-job-front-end/can-u-front-end/src/components/job-list/job-item.js"],"names":["React","useState","connect","Modal","JobItem","props","job","item","bid","setBid","winningBid","setWinningBid","currentBidder","setCurrentBidder","addBid","alert","placeBid","_id","price","login","user","username","handleDetails","name","description","postedUser","e","target","value","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport Modal from '../modal/modal';\nimport './job-item.scss';\n\n/**\n * Component to render one job item is a list\n * @param {*} props \n */\nconst JobItem = props => {\n  const job = props.item || {};\n  const [bid, setBid] = useState(0);\n  const [winningBid, setWinningBid] = useState();\n  const [currentBidder, setCurrentBidder] = useState(job.currentBidder)\n  /**\n   * @function Add Bid\n   */\n  const addBid = () => {\n    bid <= 0 ? alert('Bid must be greater than $0'): props.placeBid(job._id, bid);\n    (bid >= job.price && bid > 0)? alert(`Must bid less than current price of ${job.price}`): props.placeBid(job._id, bid);\n    if(bid < job.price && bid > 0) {\n      setWinningBid('You are now the leading bidder!');\n      setCurrentBidder(props.login.user.username);\n    }\n  }\n  return (\n    <Modal title=\"Job\" close={props.handleDetails}>\n      <div className=\"modal-container\">\n        <div id='description-container'>\n          <div id='description-1'>\n            <span>Name: {job.name}</span>\n            <span>Description: {job.description}</span>\n            <span>Posted by: {job.postedUser}</span>\n          </div>\n          <div id='description-2'>\n            <span>Current Bid: ${job.price}</span>\n            <span>Current Bidder: {currentBidder}</span>\n          </div>\n        </div>\n        <label>\n          <span>Bid Amount: $</span>\n          <input id=\"bid\" onChange={e => setBid(e.target.value)} />\n        </label>\n        <div>\n          <button id=\"modal-button\" onClick={() => {addBid()}}>Place Bid</button>\n        </div>\n        <p>{winningBid}</p>\n      </div>\n    </Modal>\n  );\n}\n\n\nconst mapStateToProps = state => ({\n  login: state.login\n});\n\nexport default connect(\n  mapStateToProps,\n)(JobItem);\n"]},"metadata":{},"sourceType":"module"}