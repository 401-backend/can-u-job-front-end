{"ast":null,"code":"var _jsxFileName = \"/Users/nataliealway/devstation/401-backend/can-u-job-front-end/can-u-front-end/src/components/my-jobs/myJobs.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport './myJobs.scss';\nimport jwt from 'jsonwebtoken';\n/**\n * Component that renders a list of all of a users jobs\n * @param {*} props \n */\n\nconst MyJobs = props => {\n  const username = jwt.verify(props.user.token, 'sauce').username;\n  const jobs = props.jobs.jobList.filter(job => job.postedUser === username);\n  const listJobs = jobs.map(job => React.createElement(\"tr\", {\n    key: job._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, job.name), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, job.price), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, job.description), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, job.isOpen ? 'Open' : 'Closed'), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => props.handleDelete(job),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Delete\")), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => props.handleDetails(job._id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Details\")), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => props.handleCloseJob(job._id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Close Job\"))));\n  return React.createElement(\"div\", {\n    className: \"myjob-table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    key: \"headings\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Name\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Bid\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Description\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Status\")), listJobs)));\n};\n\nconst mapStateToProps = state => ({\n  user: state.login,\n  jobs: state.jobs\n});\n\nconst mapDispatchToProps = (dispatch, getState) => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyJobs);","map":{"version":3,"sources":["/Users/nataliealway/devstation/401-backend/can-u-job-front-end/can-u-front-end/src/components/my-jobs/myJobs.js"],"names":["React","connect","jwt","MyJobs","props","username","verify","user","token","jobs","jobList","filter","job","postedUser","listJobs","map","_id","name","price","description","isOpen","handleDelete","handleDetails","handleCloseJob","mapStateToProps","state","login","mapDispatchToProps","dispatch","getState"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,eAAP;AACA,OAAOC,GAAP,MAAgB,cAAhB;AAGA;;;;;AAIA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AAEtB,QAAMC,QAAQ,GAAGH,GAAG,CAACI,MAAJ,CAAWF,KAAK,CAACG,IAAN,CAAWC,KAAtB,EACf,OADe,EACNH,QADX;AAEA,QAAMI,IAAI,GAAGL,KAAK,CAACK,IAAN,CAAWC,OAAX,CAAmBC,MAAnB,CAA0BC,GAAG,IAAIA,GAAG,CAACC,UAAJ,KAAmBR,QAApD,CAAb;AAGA,QAAMS,QAAQ,GAAGL,IAAI,CAACM,GAAL,CAASH,GAAG,IAC3B;AAAI,IAAA,GAAG,EAAEA,GAAG,CAACI,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKJ,GAAG,CAACK,IAAT,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKL,GAAG,CAACM,KAAT,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKN,GAAG,CAACO,WAAT,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKP,GAAG,CAACQ,MAAJ,GAAa,MAAb,GAAsB,QAA3B,CAJF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,OAAO,EAAE,MAAMhB,KAAK,CAACiB,YAAN,CAAmBT,GAAnB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CANF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,OAAO,EAAE,MAAMR,KAAK,CAACkB,aAAN,CAAoBV,GAAG,CAACI,GAAxB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CATF,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,OAAO,EAAE,MAAMZ,KAAK,CAACmB,cAAN,CAAqBX,GAAG,CAACI,GAAzB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CAbF,CADe,CAAjB;AAoBA,SACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,GAAG,EAAC,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,CADF,EAOGF,QAPH,CADF,CADF,CADF;AAeD,CA1CD;;AA4CA,MAAMU,eAAe,GAAIC,KAAD,KAAY;AAClClB,EAAAA,IAAI,EAAEkB,KAAK,CAACC,KADsB;AAElCjB,EAAAA,IAAI,EAAEgB,KAAK,CAAChB;AAFsB,CAAZ,CAAxB;;AAKA,MAAMkB,kBAAkB,GAAG,CAACC,QAAD,EAAWC,QAAX,MAAyB,EAAzB,CAA3B;;AAIA,eAAe5B,OAAO,CAACuB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CxB,MAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport './myJobs.scss';\nimport jwt from 'jsonwebtoken';\n\n\n/**\n * Component that renders a list of all of a users jobs\n * @param {*} props \n */\nconst MyJobs = props => {\n  \n  const username = jwt.verify(props.user.token, \n    'sauce').username;\n  const jobs = props.jobs.jobList.filter(job => job.postedUser === username);\n  \n  \n  const listJobs = jobs.map(job => (\n    <tr key={job._id}>\n      <td>{job.name}</td>\n      <td>{job.price}</td>\n      <td>{job.description}</td>\n      <td>{job.isOpen ? 'Open' : 'Closed'}</td>\n\n      <td>\n        <button onClick={() => props.handleDelete(job)}>Delete</button>\n      </td>\n      <td>\n        <button onClick={() => props.handleDetails(job._id)}>Details</button>\n      </td>\n\n      <td>\n        <button onClick={() => props.handleCloseJob(job._id)}>Close Job</button>\n      </td>\n\n    </tr>\n  ));\n  return (\n    <div className=\"myjob-table\">\n      <table>\n        <tbody>\n          <tr key=\"headings\">\n            <td>Name</td>\n            <td>Bid</td>\n            <td>Description</td>\n            <td>Status</td>\n          </tr>\n          {listJobs}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.login,\n  jobs: state.jobs\n});\n\nconst mapDispatchToProps = (dispatch, getState) => ({});\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyJobs);"]},"metadata":{},"sourceType":"module"}