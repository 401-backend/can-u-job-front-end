{"ast":null,"code":"const callAPI = (url, method = \"get\", body, token, handler, errorHandler) => {\n  return fetch(url, {\n    method: method,\n    mode: \"cors\",\n    cache: \"no-cache\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": \"Bearer \" + token\n    },\n    body: body ? JSON.stringify(body) : undefined\n  }).then(response => response.json()).then(data => typeof handler === \"function\" ? handler(data) : data).catch(e => typeof errorHandler === \"function\" ? errorHandler(e) : console.error(e));\n};\n\nexport { callAPI };","map":{"version":3,"sources":["/Users/nataliealway/devstation/401-backend/can-u-job-front-end/can-u-front-end/src/lib/api.js"],"names":["callAPI","url","method","body","token","handler","errorHandler","fetch","mode","cache","headers","JSON","stringify","undefined","then","response","json","data","catch","e","console","error"],"mappings":"AAAA,MAAMA,OAAO,GAAG,CAACC,GAAD,EAAMC,MAAM,GAAG,KAAf,EAAsBC,IAAtB,EAA4BC,KAA5B,EAAmCC,OAAnC,EAA4CC,YAA5C,KAA6D;AAC3E,SAAOC,KAAK,CAACN,GAAD,EAAM;AAChBC,IAAAA,MAAM,EAAEA,MADQ;AAEhBM,IAAAA,IAAI,EAAE,MAFU;AAGhBC,IAAAA,KAAK,EAAE,UAHS;AAIhBC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEN,uBAAiB,YAAYN;AAFvB,KAJO;AAOhBD,IAAAA,IAAI,EAAEA,IAAI,GAAGQ,IAAI,CAACC,SAAL,CAAeT,IAAf,CAAH,GAA0BU;AAPpB,GAAN,CAAL,CASJC,IATI,CASCC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EATb,EAUJF,IAVI,CAUCG,IAAI,IAAK,OAAOZ,OAAP,KAAmB,UAAnB,GAAgCA,OAAO,CAACY,IAAD,CAAvC,GAAgDA,IAV1D,EAWJC,KAXI,CAWEC,CAAC,IACN,OAAOb,YAAP,KAAwB,UAAxB,GAAqCA,YAAY,CAACa,CAAD,CAAjD,GAAuDC,OAAO,CAACC,KAAR,CAAcF,CAAd,CAZpD,CAAP;AAcD,CAfD;;AAiBA,SAASnB,OAAT","sourcesContent":["const callAPI = (url, method = \"get\", body, token, handler, errorHandler) => {\n  return fetch(url, {\n    method: method,\n    mode: \"cors\",\n    cache: \"no-cache\",\n    headers: { \n      \"Content-Type\": \"application/json\",\n       \"Authorization\": \"Bearer \" + token},\n    body: body ? JSON.stringify(body) : undefined\n  })\n    .then(response => response.json())\n    .then(data => (typeof handler === \"function\" ? handler(data) : data))\n    .catch(e =>\n      typeof errorHandler === \"function\" ? errorHandler(e) : console.error(e)\n    );\n};\n\nexport { callAPI };\n  "]},"metadata":{},"sourceType":"module"}