{"ast":null,"code":"var _jsxFileName = \"/Users/nataliealway/devstation/401-backend/can-u-job-front-end/can-u-front-end/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport cookie from 'react-cookies';\nimport { connect } from \"react-redux\";\nimport './style/app.scss';\nimport { Else, If, Then, When } from './components/conditionals/conditionals';\nimport Dashboard from './components/dashboard/dashboard';\nimport Footer from './components/footer/footer';\nimport JobItem from './components/job-list/job-item';\nimport JobList from './components/job-list/job-list';\nimport Nav from './components/nav/nav';\nimport Header from './components/header/header';\nimport Splash from './components/splash/splash';\nimport * as actions from './store/action';\n/**\n * Main App component\n * @param {*} props\n */\n\nfunction App(props) {\n  const [screen, setScreen] = useState('dashboard');\n\n  const _addJob = data => {\n    const authCookie = cookie.load('auth');\n    data.token = authCookie;\n    data.complete = false;\n    props.handlePost(data);\n  };\n\n  const _deleteItem = data => {\n    const authCookie = cookie.load('auth');\n    data.token = authCookie;\n    props.handleDelete(data);\n  }; // const _toggleComplete = id => {\n  //   props.handleToggle(id);\n  // };\n\n\n  const _toggleDetails = id => {\n    props.handleDetails(id);\n  };\n\n  const _getJobs = () => {\n    props.handleGetJobs();\n  };\n\n  const _getUsers = data => {\n    const authCookie = cookie.load('auth');\n    data.token = authCookie;\n    props.handleGetUsers(data);\n  };\n\n  const placeBid = () => {\n    console.log(props.jobs.jobList[0]._id);\n    const authCookie = cookie.load('auth');\n    let id = props.jobs.jobList[0]._id;\n    let body = {\n      price: 10\n    };\n    props.handlePlaceBid({\n      id: id,\n      body: body,\n      token: authCookie\n    });\n  };\n\n  const closeJob = () => {\n    const authCookie = cookie.load('auth');\n    let id = props.jobs.jobList[0]._id;\n    props.handleCloseJob({\n      id: id,\n      token: authCookie\n    });\n  };\n\n  useEffect(() => {\n    _getJobs();\n\n    console.log();\n  });\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(If, {\n    condition: !props.login.loggedIn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(Then, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(Splash, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  })), React.createElement(Else, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(Nav, {\n    setScreen: setScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: _getUsers,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"GET USERS TEST\"), React.createElement(\"button\", {\n    onClick: placeBid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"PLACE BID TEST\"), React.createElement(\"button\", {\n    onClick: closeJob,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"CLOSE JOB TEST\"), React.createElement(When, {\n    condition: screen === 'main',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(JobList, {\n    jobs: props.jobs.jobList,\n    handleDetails: _toggleDetails,\n    handleDelete: _deleteItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  })), React.createElement(When, {\n    condition: screen === 'dashboard',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(Dashboard, {\n    addJob: _addJob,\n    jobs: props.jobs.jobList,\n    handleDetails: _toggleDetails,\n    handleDelete: _deleteItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  })), React.createElement(When, {\n    condition: props.jobs.showDetails,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(JobItem, {\n    handleDetails: _toggleDetails,\n    item: props.jobs.details,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  })), React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  })))));\n}\n\nconst mapStateToProps = state => ({\n  jobs: state.jobs,\n  login: state.login\n});\n\nconst mapDispatchToProps = (dispatch, getState) => ({\n  handleGetJobs: () => dispatch(actions._getJobs()),\n  handleDetails: id => dispatch(actions.details(id)),\n  handlePost: data => dispatch(actions.postData(data)),\n  handleToggle: id => dispatch(actions.toggle(id)),\n  handleDelete: data => dispatch(actions.destroyData(data)),\n  handlePlaceBid: data => dispatch(actions.placeBid(data)),\n  handleGetUsers: data => dispatch(actions._getUsers(data)),\n  handleCloseJob: () => dispatch(actions.closeJobs())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/nataliealway/devstation/401-backend/can-u-job-front-end/can-u-front-end/src/App.js"],"names":["React","useEffect","useState","cookie","connect","Else","If","Then","When","Dashboard","Footer","JobItem","JobList","Nav","Header","Splash","actions","App","props","screen","setScreen","_addJob","data","authCookie","load","token","complete","handlePost","_deleteItem","handleDelete","_toggleDetails","id","handleDetails","_getJobs","handleGetJobs","_getUsers","handleGetUsers","placeBid","console","log","jobs","jobList","_id","body","price","handlePlaceBid","closeJob","handleCloseJob","login","loggedIn","showDetails","details","mapStateToProps","state","mapDispatchToProps","dispatch","getState","postData","handleToggle","toggle","destroyData","closeJobs"],"mappings":"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","sourcesContent":["\nimport React, { useEffect, useState } from 'react';\nimport cookie from 'react-cookies';\nimport { connect } from \"react-redux\";\nimport './style/app.scss';\nimport { Else, If, Then, When } from './components/conditionals/conditionals';\nimport Dashboard from './components/dashboard/dashboard';\nimport Footer from './components/footer/footer';\nimport JobItem from './components/job-list/job-item';\nimport JobList from './components/job-list/job-list';\nimport Nav from './components/nav/nav';\nimport Header from './components/header/header'\nimport Splash from './components/splash/splash';\nimport * as actions from './store/action';\n\n\n/**\n * Main App component\n * @param {*} props\n */\nfunction App(props) {\n\n  const [screen, setScreen] = useState('dashboard')\n\n\n  const _addJob = data => {\n    const authCookie = cookie.load('auth')\n    data.token = authCookie;\n    data.complete = false;\n    props.handlePost(data);\n  };\n\n  const _deleteItem = data => {\n    const authCookie = cookie.load('auth')\n    data.token = authCookie;\n    props.handleDelete(data);\n  };\n\n  // const _toggleComplete = id => {\n  //   props.handleToggle(id);\n  // };\n\n  const _toggleDetails = id => {\n    props.handleDetails(id);\n  };\n\n  const _getJobs = () => {\n    props.handleGetJobs();\n  };\n\n  const _getUsers = data => {\n    const authCookie = cookie.load('auth')\n    data.token = authCookie;\n    props.handleGetUsers(data);\n  }\n\n  const placeBid = () => {\n    console.log(props.jobs.jobList[0]._id)\n    const authCookie = cookie.load('auth');\n    let id = props.jobs.jobList[0]._id;\n    let body = {price: 10};\n    props.handlePlaceBid({id: id, body: body, token: authCookie})\n  }\n\n  const closeJob = () => {\n    const authCookie = cookie.load('auth');\n    let id = props.jobs.jobList[0]._id;\n    props.handleCloseJob({id: id, token: authCookie})\n  }\n\n  useEffect(()=> {\n    _getJobs();\n    console.log()\n  })\n\n  return (\n    <>\n      <div className=\"App\">\n        <If condition={!props.login.loggedIn}>\n          <Then>\n            <Splash />\n          </Then>\n          <Else>\n            <Nav setScreen={setScreen} />\n            <button onClick={_getUsers}>GET USERS TEST</button>\n            <button onClick={placeBid}>PLACE BID TEST</button>\n            <button onClick={closeJob}>CLOSE JOB TEST</button>\n            <When condition={screen === 'main'}>\n              <JobList\n                jobs={props.jobs.jobList}\n                handleDetails={_toggleDetails}\n                handleDelete={_deleteItem}\n              />\n            </When>\n            <When condition={screen === 'dashboard'}>\n              \n                <Dashboard\n                  addJob={_addJob}\n                  jobs={props.jobs.jobList}\n                  handleDetails={_toggleDetails}\n                  handleDelete={_deleteItem}\n                />\n            </When>\n            <When condition={props.jobs.showDetails}>\n              <JobItem handleDetails={_toggleDetails} item={props.jobs.details} />\n            </When>\n            <Footer />\n          </Else>\n        </If>\n      </div>\n    </>\n  );\n}\n\nconst mapStateToProps = state => ({\n  jobs: state.jobs,\n  login: state.login\n});\n\nconst mapDispatchToProps = (dispatch, getState) => ({\n  handleGetJobs: () => dispatch(actions._getJobs()),\n  handleDetails: id => dispatch(actions.details(id)),\n  handlePost: data => dispatch(actions.postData(data)),\n  handleToggle: id => dispatch(actions.toggle(id)),\n  handleDelete: data => dispatch(actions.destroyData(data)),\n  handlePlaceBid: data => dispatch(actions.placeBid(data)),\n  handleGetUsers: data => dispatch(actions._getUsers(data)),\n  handleCloseJob: () => dispatch(actions.closeJobs())\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n"]},"metadata":{},"sourceType":"module"}