{"ast":null,"code":"var _jsxFileName = \"/Users/nataliealway/devstation/401-backend/can-u-job-front-end/can-u-front-end/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport cookie from 'react-cookies';\nimport { connect } from \"react-redux\";\nimport { Else, If, Then, When } from './components/conditionals/conditionals';\nimport Dashboard from './components/dashboard/dashboard';\nimport Footer from './components/footer/footer';\nimport Header from './components/header/header';\nimport JobItem from './components/job-list/job-item';\nimport JobList from './components/job-list/job-list';\nimport Nav from './components/nav/nav';\nimport Splash from './components/splash/splash';\nimport * as actions from './store/action';\nimport './style/App.css';\n/**\n * Main App component\n * @param {*} props\n */\n\nfunction App(props) {\n  const [screen, setScreen] = useState('dashboard');\n  /**\n   * Call add job action\n   * @param {*} data \n   */\n\n  const _addJob = data => {\n    const authCookie = cookie.load('auth');\n    data.token = authCookie;\n    data.complete = false;\n    props.handlePost(data);\n  };\n  /**\n   * Call destroy item action\n   * @param {*} data \n   */\n\n\n  const _deleteItem = data => {\n    const authCookie = cookie.load('auth');\n    data.token = authCookie;\n    props.handleDelete(data);\n  };\n  /**\n   * Call toggle details action\n   * @param {*} id \n   */\n\n\n  const _toggleDetails = id => {\n    props.handleDetails(id);\n  };\n  /**\n   *  Call get jobs action\n   */\n\n\n  const _getJobs = () => {\n    props.handleGetJobs();\n  };\n  /**\n   * Call get users action\n   * @param {*} data \n   */\n\n\n  const _getUsers = data => {\n    const authCookie = cookie.load('auth');\n    data.token = authCookie;\n    props.handleGetUsers(data);\n  };\n  /**\n   * Call Place Bid action\n   * @param {*} id \n   * @param {*} price \n   */\n\n\n  const placeBid = (id, price) => {\n    console.log(props.jobs.jobList[0]._id);\n    const authCookie = cookie.load('auth');\n    let body = {\n      price: price\n    };\n    props.handlePlaceBid({\n      id: id,\n      body: body,\n      token: authCookie\n    });\n  };\n  /**\n   * Call Close job action\n   * @param {*} id \n   */\n\n\n  const closeJob = id => {\n    const authCookie = cookie.load('auth');\n    props.handleCloseJob({\n      id: id,\n      token: authCookie\n    });\n  };\n\n  useEffect(() => {\n    _getJobs();\n  });\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), React.createElement(If, {\n    condition: !props.login.loggedIn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(Then, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(Splash, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  })), React.createElement(Else, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(Nav, {\n    setScreen: setScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }), React.createElement(When, {\n    condition: screen === 'main',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(JobList, {\n    jobs: props.jobs.jobList,\n    handleDetails: _toggleDetails,\n    handleDelete: _deleteItem,\n    handleBid: placeBid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  })), React.createElement(When, {\n    condition: screen === 'dashboard',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(Dashboard, {\n    addJob: _addJob,\n    jobs: props.jobs.jobList,\n    handleDetails: _toggleDetails,\n    handleDelete: _deleteItem,\n    handleCloseJob: closeJob,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  })), React.createElement(When, {\n    condition: props.jobs.showDetails,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(JobItem, {\n    handleDetails: _toggleDetails,\n    item: props.jobs.details,\n    placeBid: placeBid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  })), React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  })))));\n}\n\nconst mapStateToProps = state => ({\n  jobs: state.jobs,\n  login: state.login\n});\n\nconst mapDispatchToProps = (dispatch, getState) => ({\n  handleGetJobs: () => dispatch(actions._getJobs()),\n  handleDetails: id => dispatch(actions.details(id)),\n  handlePost: data => dispatch(actions.postData(data)),\n  handleToggle: id => dispatch(actions.toggle(id)),\n  handleDelete: data => dispatch(actions.destroyData(data)),\n  handlePlaceBid: (id, price) => dispatch(actions.placeBid(id, price)),\n  handleGetUsers: data => dispatch(actions._getUsers(data)),\n  handleCloseJob: data => dispatch(actions.closeJobs(data))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/nataliealway/devstation/401-backend/can-u-job-front-end/can-u-front-end/src/App.js"],"names":["React","useEffect","useState","cookie","connect","Else","If","Then","When","Dashboard","Footer","Header","JobItem","JobList","Nav","Splash","actions","App","props","screen","setScreen","_addJob","data","authCookie","load","token","complete","handlePost","_deleteItem","handleDelete","_toggleDetails","id","handleDetails","_getJobs","handleGetJobs","_getUsers","handleGetUsers","placeBid","price","console","log","jobs","jobList","_id","body","handlePlaceBid","closeJob","handleCloseJob","login","loggedIn","showDetails","details","mapStateToProps","state","mapDispatchToProps","dispatch","getState","postData","handleToggle","toggle","destroyData","closeJobs"],"mappings":"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","sourcesContent":["\nimport React, { useEffect, useState } from 'react';\nimport cookie from 'react-cookies';\nimport { connect } from \"react-redux\";\nimport { Else, If, Then, When } from './components/conditionals/conditionals';\nimport Dashboard from './components/dashboard/dashboard';\nimport Footer from './components/footer/footer';\nimport Header from './components/header/header';\nimport JobItem from './components/job-list/job-item';\nimport JobList from './components/job-list/job-list';\nimport Nav from './components/nav/nav';\nimport Splash from './components/splash/splash';\nimport * as actions from './store/action';\nimport './style/App.css';\n\n\n/**\n * Main App component\n * @param {*} props\n */\nfunction App(props) {\n\n  const [screen, setScreen] = useState('dashboard')\n\n  /**\n   * Call add job action\n   * @param {*} data \n   */\n  const _addJob = data => {\n    const authCookie = cookie.load('auth')\n    data.token = authCookie;\n    data.complete = false;\n    props.handlePost(data);\n  };\n  /**\n   * Call destroy item action\n   * @param {*} data \n   */\n  const _deleteItem = data => {\n    const authCookie = cookie.load('auth')\n    data.token = authCookie;\n    props.handleDelete(data);\n  };\n  /**\n   * Call toggle details action\n   * @param {*} id \n   */\n  const _toggleDetails = id => {\n    props.handleDetails(id);\n  };\n  /**\n   *  Call get jobs action\n   */\n  const _getJobs = () => {\n    props.handleGetJobs();\n  };\n  /**\n   * Call get users action\n   * @param {*} data \n   */\n  const _getUsers = data => {\n    const authCookie = cookie.load('auth')\n    data.token = authCookie;\n    props.handleGetUsers(data);\n  }\n  /**\n   * Call Place Bid action\n   * @param {*} id \n   * @param {*} price \n   */\n  const placeBid = (id, price) => {\n    console.log(props.jobs.jobList[0]._id)\n    const authCookie = cookie.load('auth');\n    \n    let body = {price: price};\n    props.handlePlaceBid({id: id, body: body, token: authCookie})\n  }\n  /**\n   * Call Close job action\n   * @param {*} id \n   */\n  const closeJob = (id) => {\n    const authCookie = cookie.load('auth');\n    \n    props.handleCloseJob({id: id, token: authCookie})\n  }\n\n  \n\n  useEffect(()=> {\n    _getJobs();    \n  })\n\n  return (\n    <>\n      <div className=\"App\">\n        <Header />\n        <If condition={!props.login.loggedIn}>\n          <Then>\n            <Splash />\n          </Then>\n          <Else>\n            <Nav setScreen={setScreen} />      \n            \n            <When condition={screen === 'main'}>\n              <JobList\n                jobs={props.jobs.jobList}\n                handleDetails={_toggleDetails}\n                handleDelete={_deleteItem}\n                handleBid={placeBid}\n              />\n            </When>\n            <When condition={screen === 'dashboard'}>\n              \n                <Dashboard\n                  addJob={_addJob}\n                  jobs={props.jobs.jobList}\n                  handleDetails={_toggleDetails}\n                  handleDelete={_deleteItem}\n                  handleCloseJob={closeJob}\n                />\n            </When>\n            <When condition={props.jobs.showDetails}>\n              <JobItem handleDetails={_toggleDetails} item={props.jobs.details} placeBid={placeBid}/>\n            </When>\n            <Footer />\n          </Else>\n        </If>\n      </div>\n    </>\n  );\n}\n\nconst mapStateToProps = state => ({\n  jobs: state.jobs,\n  login: state.login\n});\n\nconst mapDispatchToProps = (dispatch, getState) => ({\n  handleGetJobs: () => dispatch(actions._getJobs()),\n  handleDetails: id => dispatch(actions.details(id)),\n  handlePost: data => dispatch(actions.postData(data)),\n  handleToggle: id => dispatch(actions.toggle(id)),\n  handleDelete: data => dispatch(actions.destroyData(data)),\n  handlePlaceBid: (id, price) => dispatch(actions.placeBid(id, price)),\n  handleGetUsers: data => dispatch(actions._getUsers(data)),\n  handleCloseJob: data => dispatch(actions.closeJobs(data))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n"]},"metadata":{},"sourceType":"module"}