{"ast":null,"code":"var _jsxFileName = \"/Users/nataliealway/devstation/401-backend/can-u-job-front-end/can-u-front-end/src/components/login/login.js\";\nimport React, { useState } from 'react';\nimport { Else, If, Then } from '../conditionals/conditionals';\nimport SignIn from '../signIn/signIn';\nimport SignUp from '../signUp/signUp';\nimport './login.scss';\n/**\n * Component that renders signin/ signup conditionally\n * @param {*} props \n */\n\nconst Login = props => {\n  const [loginType, setLoginType] = useState('signin');\n\n  const switchLogin = type => {\n    setLoginType(type);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(If, {\n    condition: loginType === 'signup',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Then, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(SignUp, {\n    switchLogin: switchLogin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  })), React.createElement(Else, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(SignIn, {\n    switchLogin: switchLogin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }))));\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/nataliealway/devstation/401-backend/can-u-job-front-end/can-u-front-end/src/components/login/login.js"],"names":["React","useState","Else","If","Then","SignIn","SignUp","Login","props","loginType","setLoginType","switchLogin","type"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,EAAf,EAAmBC,IAAnB,QAA+B,8BAA/B;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAO,cAAP;AAEA;;;;;AAIA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AACrB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,QAAD,CAA1C;;AAEA,QAAMU,WAAW,GAAIC,IAAD,IAAU;AAC5BF,IAAAA,YAAY,CAACE,IAAD,CAAZ;AACD,GAFD;;AAIA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,EAAD;AAAI,IAAA,SAAS,EAAEH,SAAS,KAAK,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,WAAW,EAAEE,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,WAAW,EAAEA,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,CADF,CADF;AAYD,CAnBD;;AAqBA,eAAeJ,KAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Else, If, Then } from '../conditionals/conditionals';\nimport SignIn from '../signIn/signIn';\nimport SignUp from '../signUp/signUp';\nimport './login.scss';\n\n/**\n * Component that renders signin/ signup conditionally\n * @param {*} props \n */\nconst Login = props => {\n  const [loginType, setLoginType] = useState('signin');\n\n  const switchLogin = (type) => {\n    setLoginType(type);\n  }\n\n  return (\n    <div>\n      <If condition={loginType === 'signup'}>\n        <Then>\n          <SignUp switchLogin={switchLogin} />\n        </Then>\n        <Else>\n          <SignIn switchLogin={switchLogin} />\n        </Else>\n      </If>\n    </div>\n  )\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}